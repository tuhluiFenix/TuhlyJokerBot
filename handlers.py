from telegram import Update
from telegram.ext import ContextTypes
from keyboards import MAIN_KEYBOARD
from clients.reddit import RedditClient
import os
import mimetypes


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        text="*–í—ã–±–µ—Ä–∏ –ø—É—Ç—å, –ø—É—Ç–Ω–∏–∫:*",
        reply_markup=MAIN_KEYBOARD,
        parse_mode="Markdown"
    )


async def handle_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    button_text = update.message.text
    reddit = RedditClient(
        os.getenv("REDDIT_CLIENT_ID"),
        os.getenv("REDDIT_SECRET")
    )

    if button_text == "–†–∞–¥–æ—Å—Ç—å üòä":
        memes = reddit.get_happy_memes()

        if not memes:
            await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–∞–¥–æ—Å—Ç–Ω—ã–µ –º–µ–º—ã üò¢")
            return

    elif button_text == "–ì—Ä—É—Å—Ç—å üò¢":
        memes = reddit.get_sad_memes()

        if not memes:
            await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≥—Ä—É—Å—Ç–Ω—ã–µ –º–µ–º—ã... —á—Ç–æ –µ—â—ë –ø–µ—á–∞–ª—å–Ω–µ–µ üòî")
            return
    elif button_text == "–ü—Ä–æ–∫–ª—è—Ç—å–µ üíÄ":
        memes = reddit.get_cursed_memes()

        if not memes:
            await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–æ–∫–ª—è—Ç—ã–µ –º–µ–º—ã, —Ç—ã –ø—Ä–æ–∫–ª—è—Ç ‚ò†Ô∏èüëª")
            return

    elif button_text == "–ö–æ–¥ üíª":
        memes = reddit.get_code_memes()

        if not memes:
            await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–µ–º—ã –ø—Ä–æ –∫–æ–¥ `–∏–Ω–∏—Ü–∏–∞–ª–∏–∑—É—é –≤–æ—Å—Å—Ç–∞–Ω–∏–µ`")
            return

    if button_text in ["–†–∞–¥–æ—Å—Ç—å üòä", "–ì—Ä—É—Å—Ç—å üò¢", "–ü—Ä–æ–∫–ª—è—Ç—å–µ üíÄ", "–ö–æ–¥ üíª"]:
        for meme in memes:
            try:
                url = meme['url']
                mime_type, _ = mimetypes.guess_type(url)

                if mime_type and mime_type.startswith('image/'):
                    if mime_type.endswith('gif'):
                        await update.message.reply_animation(
                            animation=url,
                            caption=f"{meme['title']}\n(—Å r/{meme['subreddit']})"
                        )
                    else:
                        await update.message.reply_photo(
                            photo=url,
                            caption=f"{meme['title']}\n(—Å r/{meme['subreddit']})"
                        )
                elif url.endswith(('.mp4', '.webm')):
                    await update.message.reply_video(
                        video=url,
                        caption=f"{meme['title']}\n(—Å r/{meme['subreddit']})"
                    )
                else:
                    await update.message.reply_text(
                        f"{meme['title']}\n(—Å r/{meme['subreddit']})\n{url}"
                    )
                reddit.sent_memes.add(meme['id'])
                break

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–º–∞: {e}")
                continue

        return

    responses = {}

    await update.message.reply_text(
        text=responses.get(button_text, "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ!"),
        parse_mode="Markdown"
    )
